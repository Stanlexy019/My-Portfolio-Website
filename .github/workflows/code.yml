name: Deploy to S3 Bucket

on: 
  push:
    branches:
    - main
    - dev

  pull_request:
    branches:
      - main
      - dev
jobs: 
  builds:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Sync files to S3
        run: aws s3 sync . s3://stanleyokoli-969759464709 --delete --exclude ".git/" --exclude ".github/"

  deploy-docker:
    runs-on: ubuntu-latest
    needs: builds
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Set ECR environment
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=my-website" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Build, Tag, and Push Docker image
        run: |
          docker build -t my-portfolio:v1 .
          pwd
          ls -al
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 


      - name: Pull and run Docker image
        run: |
            docker pull 969759464709.dkr.ecr.eu-north-1.amazonaws.com/my-portfolio:v1
            docker run --rm -d -p 8080:80 969759464709.dkr.ecr.eu-north-1.amazonaws.com/my-portfolio:v1

      - name: Run post-deployment checks
        run: |
            sleep 10
            curl -f http://localhost:8080 || (echo "Site not responding" && exit 1)

      - name: Notify deployment success
        run: |
            echo "Deployment and checks completed successfully!"

  

    